@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700;900&display=swap');

/* This is like creating variables. You want to use these colors? Just use the variable name */
:root{ --border-radius: 0.5rem; }

*,
*::before,
*::after{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html, body{ overflow-x: hidden; }

html{
    font-size: 62.5%;    
}

body{
    width: 100%;
    min-height: 100vh;
    background-color: #06283D;
    font-family: 'Roboto', sans-serif;
    padding: 2rem;
}

h4, p{
    line-height: 1.6;
}

/* Input section */
.form-container{
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 7rem;
}

.form-title{
    font-size: 4rem;
    color: #DFF6FF;
    margin-right: 2rem;
}

.input{
    display: block;
    width: 40rem;
    font-size: 2.5rem;
    font-family: inherit;
    border: 0.3rem solid #DFF6FF;
    border-radius: var(--border-radius);
    color: #DFF6FF;
    background-color: transparent;
    padding: 1.5rem 2rem;
    margin-right: 4rem;
    transition: all 0.3s;
}

.input:focus{
    outline: none;
    border: 0.3rem solid #47B5FF;
}

.input:focus:invalid{
    border: 0.3rem solid red;
}

.input::-webkit-input-placeholder{
    color: rgba(223, 246, 255, 0.4);
}

.form-button{
    cursor: pointer;
    font-size: 2.5rem;
    font-family: inherit;
    padding: 1.5rem 2rem;
    background-color: #DFF6FF;
    border: none;
    border-radius: var(--border-radius)
}

.btn-pressed{
    background-color: rgba(71, 181, 255, 0.7);
}

/* List of tv show section */
.container{
    width: 100%;
    max-width: 400rem;
    display: grid;
    grid-template-rows: repeat(2, 60rem);
    grid-template-columns: repeat(4, 1fr);
    row-gap: 5rem;
    column-gap: 5rem;
    grid-auto-rows: 60rem;
    grid-auto-columns: 1fr;
}

.item__wrapper{
    background-color: rgba(37, 109, 133, 0.3);
    width: 100%;
    height: 100%;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
    border-radius: 1rem;
}

.item__image{
    width: 20rem;
    height: 30rem;
    object-fit: cover;
    object-position: center;
}

.item__title, .item__genre, .item__rating{
    color: #DFF6FF;
}

.item__title{
    color: #DFF6FF;
    font-size: 3rem;
    text-align: center;
}

.item__genre, .item__rating{
    font-size: 2rem;
}

/* Error message */
.errorMessage{ 
    color: #DFF6FF;
    font-size: 4rem;
    text-align: center;
}

.hide{ display: none }

/* 1em = 16px */
/* 112.5em = 1800px (Big desktop)*/
/* @media only screen and (min-width: 112.5em){ 
    html{ font-size: 80%; }
} */

/* 112.4375em = 1799px (Medium desktop)*/
@media only screen and (max-width: 112.4375em){ 
    .container{ grid-template-columns: repeat(3, 1fr); }
}

/* 87.5em = 1400px (Small desktop)*/
@media only screen and (max-width: 87.5em){ 
    .container{ grid-template-columns: repeat(2, 1fr); }
}

/* 75em = 1200px (Tab land)*/
@media only screen and (max-width: 75em){ 
    html{ font-size: 56.25%; }
}

/* 56.25em = 900px (Tab port)*/
@media only screen and (max-width: 56.25em){ 
    html{ font-size: 50%; }

    .form-container{ 
        flex-direction: column; 
        align-items: flex-start;
    }

    .form-title, .input{ margin-bottom: 4rem; }

    .input{ width: 100%; }

    .form-button{ 
        width: 100%; 
        padding: 2rem;
    }

    .item__title{ font-size: 3rem; }

}

/* 37.5em = 600px (Phone)*/
@media only screen and (max-width: 37.5em){ 
    html{ font-size: 40%; }

    .container{ 
        grid-template-columns: 1fr;
        grid-template-rows: 70rem; 
    }
}